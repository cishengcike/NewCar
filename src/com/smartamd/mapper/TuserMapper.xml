<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smartamd.mapper.TuserMapper" >
  <resultMap id="BaseResultMap" type="test.model.tuser" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="teamId" property="teamid" jdbcType="INTEGER" />
    <result column="carId" property="carid" jdbcType="INTEGER" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="lo" property="lo" jdbcType="DOUBLE" />
    <result column="la" property="la" jdbcType="DOUBLE" />
    <result column="CID" property="cid" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="longCount" property="longcount" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="DOUBLE" />
    <result column="crops" property="crops" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="test.model.tuser" extends="BaseResultMap" >
    <result column="photo" property="photo" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, teamId, carId, userType, userName, password, email, tel, address, status,
    lo, la, CID, loginTime, longCount, area, crops
  </sql>
  <sql id="Blob_Column_List" >
    photo
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tuser
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tuser
    where userId = #{userid,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.smartamd.model.Tuser" >
    insert into tuser (userId, teamId, carId, 
      userType, userName, password, 
      email, tel, address, 
      status, lo, la, loginTime, 
      longCount, Extra1, Extra2, 
      Extra3)
    values (#{userid,jdbcType=INTEGER}, #{teamid,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, 
      #{usertype,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{lo,jdbcType=DOUBLE}, #{la,jdbcType=DOUBLE}, #{logintime,jdbcType=TIMESTAMP}, 
      #{longcount,jdbcType=INTEGER}, #{extra1,jdbcType=VARCHAR}, #{extra2,jdbcType=VARCHAR}, 
      #{extra3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.smartamd.model.Tuser" >
    insert into tuser
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="teamid != null" >
        teamId,
      </if>
      <if test="carid != null" >
        carId,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="lo != null" >
        lo,
      </if>
      <if test="la != null" >
        la,
      </if>
      <if test="logintime != null" >
        loginTime,
      </if>
      <if test="longcount != null" >
        longCount,
      </if>
      <if test="extra1 != null" >
        Extra1,
      </if>
      <if test="extra2 != null" >
        Extra2,
      </if>
      <if test="extra3 != null" >
        Extra3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="teamid != null" >
        #{teamid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="lo != null" >
        #{lo,jdbcType=DOUBLE},
      </if>
      <if test="la != null" >
        #{la,jdbcType=DOUBLE},
      </if>
      <if test="logintime != null" >
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="longcount != null" >
        #{longcount,jdbcType=INTEGER},
      </if>
      <if test="extra1 != null" >
        #{extra1,jdbcType=VARCHAR},
      </if>
      <if test="extra2 != null" >
        #{extra2,jdbcType=VARCHAR},
      </if>
      <if test="extra3 != null" >
        #{extra3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartamd.model.Tuser" >
    update tuser
    <set >
      <if test="teamid != null" >
        teamId = #{teamid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        carId = #{carid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="lo != null" >
        lo = #{lo,jdbcType=DOUBLE},
      </if>
      <if test="la != null" >
        la = #{la,jdbcType=DOUBLE},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="longcount != null" >
        longCount = #{longcount,jdbcType=INTEGER},
      </if>
      <if test="extra1 != null" >
        Extra1 = #{extra1,jdbcType=VARCHAR},
      </if>
      <if test="extra2 != null" >
        Extra2 = #{extra2,jdbcType=VARCHAR},
      </if>
      <if test="extra3 != null" >
        Extra3 = #{extra3,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartamd.model.Tuser" >
    update tuser
    set teamId = #{teamid,jdbcType=INTEGER},
      carId = #{carid,jdbcType=INTEGER},
      userType = #{usertype,jdbcType=INTEGER},
      userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      lo = #{lo,jdbcType=DOUBLE},
      la = #{la,jdbcType=DOUBLE},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      longCount = #{longcount,jdbcType=INTEGER},
      Extra1 = #{extra1,jdbcType=VARCHAR},
      Extra2 = #{extra2,jdbcType=VARCHAR},
      Extra3 = #{extra3,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>

  <!-- htt  updateUserLoLa -->
  <update id="updateUserLoLa">
    update tuser
    set
    lo = #{lo},
    la = #{la}
    where userId = #{userID}

  </update>
  <!-- htt  queryMapFarmer -->
  <select id="queryMapFarmer"
          resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID,
    if(isnull(tu.teamId),0,tu.teamId) as TEAMID,tu.loginTime AS LOGINTIME,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM tuser as tu
    where
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber} AND tu.userType=0 ORDER BY DISTANCE ASC

  </select>

  <!-- htt  queryMapFarmerPhone -->
  <select id="queryMapFarmerPhone"
          resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID,
    if(isnull(tu.teamId),0,tu.teamId) as TEAMID,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM tuser as tu
    where
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber} AND tu.userType=0 ORDER BY DISTANCE ASC

  </select>
  <!-- htt  queryMapDriver -->
  <select id="queryMapDriver"
          resultType="map">
    SELECT tu.userId as USERID,if(ISNULL(tc.lo),tu.lo,tc.lo) AS LO,if(ISNULL(tc.la),tu.la,tc.la) as LA,tu.tel as PHONE,tu.userName as USERNAME,tu.userType AS USERTYPE,
    if(isnull(tu.CID),'0',tu.CID) AS CID,tc.type AS CARTYPE,if(isnull(tu.teamId),0,tu.teamId) as TEAMID,tct.typeName  AS CARTYPENAME,tu.loginTime AS LOGINTIME,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM  tuser as tu , tcar as tc,tcartype as tct
    where
    tu.tel=tc.driverTel AND tct.typeId=tc.type AND
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber}  AND  tu.userType=1 ORDER BY DISTANCE ASC

  </select>

    <select id="queryMapDriverPhone"
          resultType="map">
    SELECT tu.userId as USERID,if(ISNULL(tc.lo),tu.lo,tc.lo) AS LO,if(ISNULL(tc.la),tu.la,tc.la) as LA,tu.tel as PHONE,tu.userName as USERNAME,tu.userType AS USERTYPE,
    if(isnull(tu.CID),'0',tu.CID) AS CID,tc.type AS CARTYPE,if(isnull(tu.teamId),0,tu.teamId) as TEAMID,tct.typeName  AS CARTYPENAME,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM  tuser as tu , tcar as tc,tcartype as tct
    where
    tu.tel=tc.driverTel AND tct.typeId=tc.type AND
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber}  AND  tu.userType=1 ORDER BY DISTANCE ASC

  </select>
  <select id="queryUserByTel" resultType="map">
    select  userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,userType AS  USERTYPE,loginTime AS LOGINTIME
    from tuser
    where tel= #{userTel}
  </select>
 <!--htt updatePassword-->
  <update id="updatePassword" parameterType="java.lang.Integer">
    update tuser
    set password = #{new_password}
    where userId = #{userID}
  </update>
  <!--htt deleteByTel-->
  <delete id="deleteByTel" parameterType="java.lang.String" >
    delete from tuser
    where tel = #{tel}
  </delete>


  <!-- SteinbockA-->
  <select id="queryMapDriverByType"
          resultType="map">
    SELECT tu.userId as USERID,if(ISNULL(tc.lo),tu.lo,tc.lo) as LO,if(ISNULL(tc.la),tu.la,tc.la) as LA,tu.tel as PHONE,tu.userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID, tc.type AS CARTYPE,if(isnull(tu.teamId),0,tu.teamId) as TEAMID,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM  tuser as tu  inner  join  tcar as tc   on   tu.tel=tc.driverTel
    where
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber}  AND  tu.userType=1 AND tc.type=#{carType} ORDER BY DISTANCE ASC

  </select>

  <select id="queryMapDriverByPhone"  resultType="map">
    SELECT tu.userid as USERID,if(ISNULL(tc.lo),tu.lo,tc.lo) as LO,if(ISNULL(tc.la),tu.la,tc.la) as LA,tu.tel as PHONE,tu.userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID , tc.type AS CARTYPE,if(isnull(tu.teamId),0,tu.teamId) as TEAMID,

    (ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(if(ISNULL(tc.lo),tu.lo,tc.lo)*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (if(ISNULL(tc.la),tu.la,tc.la)*PI()/180-#{la}*PI()/180)/2),2)))*1000))/1000 as DISTANCE

    FROM tuser as tu INNER JOIN tcar as tc on tu.tel=tc.driverTel where tel=#{phone} AND tu.userType=1
  </select>


  <select id="queryMapFarmerByPhone"  resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID ,

    (ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000))/1000 as DISTANCE

    FROM tuser as tu where tel=#{phone} AND tu.userType=0
  </select>

  <select id="queryMapAll" resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) AS CID ,

    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM tuser as tu
    where
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 &lt;=#{kmNumber} ORDER BY DISTANCE ASC
  </select>

  <select id="queryMapAllByPhone" resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) as CID,

    (ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000))/1000 as DISTANCE

    FROM tuser as tu where tel=#{phone}
  </select>

  <update id="updateUser" >
    update tuser set CID=#{CID} ,lo=#{lo},la=#{la},loginTime=#{loginTime} WHERE tel=#{phone}
  </update>

  <select id="selectUserByPhone"  resultType="map">
    SELECT lo AS LO,la AS LA,tel as PHONE,username AS USERNAME,usertype AS USERTYPE,
    ROUND(6378.138*2*ASIN(SQRT(POW(SIN(
    (tu.lo*PI()/180-#{lo}*PI()/180)/2),2)
    +COS(tu.lo*PI()/180)*COS(#{lo}*PI()/180)*
    POW(SIN(
    (tu.la*PI()/180-#{la}*PI()/180)/2),2)))*1000)/1000 as DISTANCE

    FROM tuser AS tu WHERE tel=#{opphone}
  </select>

  <select id="selectUserTelByUserID" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT tel FROM tuser where userid=#{userID}
  </select>

  <update id="updateCarType" >
    UPDATE tcar SET type=#{type} where driverTel=#{phone}
  </update>

  <select id="selectPhoneByUserID" parameterType="java.lang.Integer" resultType="java.lang.String">
    SELECT tel from tuser where userid=#{userID}
  </select>

  <select id="selectUserFromTcar" parameterType="java.lang.String" resultType="map">
    SELECT * FROM newcar.tcar WHERE driverTel=#{phone}
  </select>

  <select id="queryUserByPhone" parameterType="java.lang.String" resultType="map">
    SELECT userID as USERID,lo as LO,la as LA,tel as PHONE,userName as USERNAME,tu.userType AS USERTYPE,if(isnull(tu.CID),'0',tu.CID) as CID ,if(isnull(tu.teamId),0,tu.teamId) as TEAMID
    FROM tuser AS tu WHERE tel=#{phone}
  </select>

  <insert id="insertTcarWhileRegister" parameterType="java.lang.String">
    INSERT INTO tcar (driverTel,simNo,machineNo,type) VALUES (#{phone},0,0,11)
  </insert>
</mapper>